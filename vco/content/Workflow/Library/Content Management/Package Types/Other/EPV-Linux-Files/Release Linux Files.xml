<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item9" object-name="workflow:name=generic" id="ec40917b-669a-4c59-9628-d8b67a5daadb" version="2.2.3" api-version="6.0.0" allowed-operations="vef" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Release Linux Files]]></display-name>
  <position y="54.5" x="65.0"/>
  <input>
    <param name="importDir" type="string"/>
    <param name="packageName" type="string"/>
    <param name="releaseEndpoint" type="string"/>
    <param name="packageType" type="string"/>
  </input>
  <attrib name="packageUrl" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="contentFilename" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="server" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[Hostname or IP address of the SSH host]]></description>
  </attrib>
  <attrib name="username" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
    <description><![CDATA[Username]]></description>
  </attrib>
  <attrib name="password" type="SecureString" read-only="false">
    <description><![CDATA[Password]]></description>
  </attrib>
  <attrib name="remoteFile" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="localFile" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="output" type="number" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
    <description><![CDATA[Output of the command executed by the workflow.]]></description>
  </attrib>
  <attrib name="remoteExportFolder" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="format" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <workflow-item name="item12" out-name="item1" type="task">
    <display-name><![CDATA[Get Config]]></display-name>
    <script encoded="false"><![CDATA[server = System.getModule("com.vmware.cse.clm.configs").getValueFromResourceConfig(releaseEndpoint,"server");
System.debug("Releasing content to: " + server + " using username: " + username);
username = System.getModule("com.vmware.cse.clm.configs").getValueFromResourceConfig(releaseEndpoint,"user");
password = System.getModule("com.vmware.cse.clm.configs").getValueFromResourceConfig(releaseEndpoint,"password");
remoteExportFolder = System.getModule("com.vmware.cse.utils").fixDirectoryPath(System.getModule("com.vmware.cse.clm.configs").getValueFromResourceConfig(releaseEndpoint,"tempPath"));
if (remoteExportFolder){
	System.debug("Got tempPath from content endpoint configuration: " + remoteExportFolder);
} else {
	remoteExportFolder = "/tmp/clm/";
}
 ]]></script>
    <in-binding>
      <bind name="releaseEndpoint" type="string" export-name="releaseEndpoint"/>
    </in-binding>
    <out-binding>
      <bind name="server" type="string" export-name="server"/>
      <bind name="username" type="string" export-name="username"/>
      <bind name="password" type="SecureString" export-name="password"/>
      <bind name="remoteExportFolder" type="string" export-name="remoteExportFolder"/>
    </out-binding>
    <position y="64.5" x="324.5"/>
  </workflow-item>
  <workflow-item name="item9" out-name="item12" type="task">
    <display-name><![CDATA[Initialize]]></display-name>
    <script encoded="false"><![CDATA[var contentFilename = System.getModule("com.vmware.cse.clm.configs").getValueFromPackageTypeConfig(packageType,"contentFilename");

var format = contentFilename.replace(contentFilename.split(".")[0],"");
System.log("Filename: " + contentFilename);
if (format != ".tar.gz"){
	throw ("Unsupported file type configured in package type configuration: " + format);
}
System.log("Package Name: " + packageName);
var localFile=System.getModule("com.vmware.cse.utils").fixDirectoryPath(importDir)+contentFilename;
if (!System.getModule("com.vmware.cse.clm.utils").fileExistsSSH(localFile,releaseEndpoint)){
	throw "Import file does not exist" + localfile ;
}
]]></script>
    <in-binding>
      <bind name="importDir" type="string" export-name="importDir"/>
      <bind name="packageName" type="string" export-name="packageName"/>
      <bind name="packageType" type="string" export-name="packageType"/>
      <bind name="releaseEndpoint" type="string" export-name="releaseEndpoint"/>
    </in-binding>
    <out-binding>
      <bind name="packageUrl" type="string" export-name="packageUrl"/>
      <bind name="contentFilename" type="string" export-name="contentFilename"/>
      <bind name="format" type="string" export-name="format"/>
      <bind name="localFile" type="string" export-name="localFile"/>
    </out-binding>
    <position y="64.5" x="164.5"/>
  </workflow-item>
  <workflow-item name="item11" out-name="item0" type="task">
    <display-name><![CDATA[Release]]></display-name>
    <script encoded="false"><![CDATA[var tempFolder = remoteExportFolder + System.nextUUID() + "/";
var remoteFile = tempFolder + contentFilename;
System.debug("remoteFile: " + remoteFile);

System.getModule("com.vmware.cse.clm.utils").exchangeSSHkeys(server,username,password,releaseEndpoint);

var cmd = ("mkdir -p " + tempFolder);
System.log("Creating remote directory:" + cmd);
var output = System.getModule("com.vmware.cse.utils").executeSSH(server,username,password,cmd);

var cmd = "scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -q " + localFile + " " + username + "@" +  server + ":" + remoteFile + "; echo $?";
System.debug("Copying content file to remote server...");
var result = System.getModule("com.vmware.cse.clm.utils").executeSSH(cmd,null,releaseEndpoint);
System.debug("Result (0 = success): " + result);

var cmd = ("tar xvf "+ remoteFile + " -C / > /dev/null; echo $?");
System.log("Extracting tar.gz file:" + cmd);
var output = System.getModule("com.vmware.cse.utils").executeSSH(server,username,password,cmd);
System.debug("Result (0 = success): " + output);

if (output && output.indexOf("0") != -1 && !System.getModule("com.vmware.cse.clm.configs").getValueFromGlobalConfig("debugMode")){
	if (tempFolder != "/"){
		var cmd = "rm -rf "+ tempFolder; 
		System.debug("Deleting temp export directory on remote server: " + cmd)
		System.getModule("com.vmware.cse.utils").executeSSH(server,username,password,cmd);
	}
}

if (output && output.indexOf("0") == -1){
	throw "Failed to release " + packageName + " to endpoint: " + releaseEndpoint + " (" + server + ")";
}


]]></script>
    <in-binding>
      <bind name="contentFilename" type="string" export-name="contentFilename"/>
      <bind name="importDir" type="string" export-name="importDir"/>
      <bind name="localFile" type="string" export-name="localFile"/>
      <bind name="packageName" type="string" export-name="packageName"/>
      <bind name="password" type="SecureString" export-name="password"/>
      <bind name="releaseEndpoint" type="string" export-name="releaseEndpoint"/>
      <bind name="remoteExportFolder" type="string" export-name="remoteExportFolder"/>
      <bind name="server" type="string" export-name="server"/>
      <bind name="username" type="string" export-name="username"/>
    </in-binding>
    <out-binding>
      <bind name="remoteFile" type="string" export-name="remoteFile"/>
      <bind name="output" type="number" export-name="output"/>
    </out-binding>
    <position y="64.5" x="604.5"/>
  </workflow-item>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="54.5" x="784.5"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item11" type="link" linked-workflow-id="371a794d-e6eb-40eb-947e-57a0bfe9db1c">
    <display-name><![CDATA[EPV - Retrieve Password with AIM and PS]]></display-name>
    <in-binding>
      <bind name="address" type="string" export-name="server">
        <description><![CDATA[The address (FQDN) of the system that has the credentials]]></description>
      </bind>
      <bind name="username" type="string" export-name="username">
        <description><![CDATA[The username of the account to retrieve]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="password" type="SecureString" export-name="password">
        <description><![CDATA[outputting the password]]></description>
      </bind>
    </out-binding>
    <description><![CDATA[Copyright 2017, VMware, Inc. All Rights Reserved.

Workflow to retrieve passwords from CyberArk EPV using AIM installed on a PS host.]]></description>
    <position y="64.5" x="464.5"/>
  </workflow-item>
  <presentation>
    <p-param name="importDir">
      <desc><![CDATA[importDir]]></desc>
    </p-param>
    <p-param name="packageName">
      <desc><![CDATA[packageName]]></desc>
    </p-param>
    <p-param name="releaseEndpoint">
      <desc><![CDATA[releaseEndpoint]]></desc>
    </p-param>
    <p-param name="packageType">
      <desc><![CDATA[packageType]]></desc>
    </p-param>
  </presentation>
</workflow>